version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: cronicas_postgres
    environment:
      POSTGRES_DB: cronicas_civilizacion
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cronicas_network

  # Redis Cache
  redis:
    image: redis:6-alpine
    container_name: cronicas_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cronicas_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cronicas_backend
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=cronicas_civilizacion
      - DB_USER=postgres
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - FRONTEND_URL=http://localhost:5173
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - cronicas_network
    command: npm run dev

  # Frontend Development Server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: cronicas_frontend
    environment:
      - VITE_API_URL=http://localhost:3000
      - VITE_SOCKET_URL=http://localhost:3000
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - cronicas_network
    command: npm run dev

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cronicas_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cronicas.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - cronicas_network
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:

networks:
  cronicas_network:
    driver: bridge 